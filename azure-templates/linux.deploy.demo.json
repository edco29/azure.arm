{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue" : "[resourceGroup().location]" ,
            "metadata": {
                "description": "location for all the resources"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_B1s",
            "metadata": {
                "description": "size of Vm"
            }
        },

        "adminPasswordOrKey": {
            "type": "securestring",
            "defaultValue" : "aA4$jnjadjicdajnic12",
            "metadata": {
                "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
            }
        },
        "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
          "sshPublicKey",
          "password"
        ],
        "metadata": {
          "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
      },
      "adminUsername": {
          "defaultValue": "argosmachine",
          "type": "string",
          "metadata": {
              "description": "description"
          }
      }
    },
    "functions": [],
    "variables": {
        "resourcePrefix": "Argos",
        "nsgName": "[concat(variables('resourcePrefix') , 'NSG')]",
        "publicIp": "[concat(variables('resourcePrefix'), 'PublicIp')]",
        "virtualNetwork": "[concat(variables('resourcePrefix'), 'VirtualNetwork')]",
        "networkInterface": "[concat(variables('resourcePrefix'), 'NetworkInterface')]",
        "storageAccBoot": "[toLower(concat(variables('resourcePrefix') , 'storageAccBoot2'))]",
        "virtualMachine": "[concat(variables('resourcePrefix') , 'ArgosVm')]",
        "linuxConfiguration": {
        "disablePasswordAuthentication": true,
        "ssh": {
          "publicKeys": [
            {
              "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
              "keyData": "[parameters('adminPasswordOrKey')]"
            }
          ]
        }
      }

    },
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-11-01",
            "name": "[variables('nsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "ssh-connection",
                        "properties": {
                            "description": "description",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "http-connection",
                        "properties": {
                            "description": "Allow acces to HTTP connection",
                            "protocol": "Tcp",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "80",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },

        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2019-11-01",
            "name": "[variables('publicIp')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "publicIPAddress1"
            },
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "idleTimeoutInMinutes": 4,
                "publicIPAllocationMethod": "Dynamic",
                "dnsSettings": {
                    "domainNameLabel": "argoslinuxvm"
                }
            }
        },

        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2019-11-01",
            "name": "[variables('virtualNetwork')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "virtualNetwork1"
            },

            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "Subnet-1",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24"

                        }
                    },
                    {
                        "name": "Subnet-2",
                        "properties": {
                            "addressPrefix": "10.0.1.0/24"
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('networkInterface')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2019-11-01",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "networkInterface1"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetwork'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups',  variables('nsgName'))]",
                "[resourceId('Microsoft.Network/publicIPAddresses',  variables('publicIp'))]"
            ],
            "properties": {
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                },

                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIp'))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets',  variables('virtualNetwork'),  'Subnet-1')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('storageAccBoot')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "tags": {
                "displayName": "storageaccount1"
            },
            "location": "[parameters('location')]",
            "kind": "StorageV2",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-07-01",
            "name": "[variables('virtualMachine')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccBoot'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', variables('networkInterface'))]"
            ],
            "tags": {
                "displayName": "argoslinux"
            },
            "properties": {

                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"

                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "16.04-LTS",
                        "version": "latest"
                    },
                    "osDisk": {
                        "createOption": "FromImage",
                        "name": "linuxargosdiskos",
                        "osType": "Linux",
                        "caching": "ReadOnly",
                        "managedDisk": {
                            "storageAccountType": "Standard_LRS"
                        }
                    },
                    "dataDisks": [
                        {
                            "caching": "ReadOnly",
                            "createOption": "Empty",
                            "name": "linuxargosdiskapp",
                            "diskSizeGB": 4,
                            "lun": 0,
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            }

                        }
                    ]

                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('networkInterface'))]"
                        }
                    ]
                },
                "osProfile": {
                    "adminUsername": "[parameters('adminUsername')]",
                   "linuxConfiguration":  "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                    "computerName": "argosdev",
                    "adminPassword": "[parameters('adminPasswordOrKey')]"
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId('Microsoft.Storage/storageAccounts',variables('storageAccBoot'))).primaryEndpoints.blob]"
                    }
                }

            }

        }

    ],
    "outputs": {
        "resourcegroup": {
            "type": "object",
            "value": "[resourceGroup()]"
        }
    }
}